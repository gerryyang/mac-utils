language: c
matrix:
  include:
    - name: Linux x86_64 and i686 (valgrind and uclibc also)
      os: linux
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - gcc-8-multilib
            - libc6-dbg:i386
            - linux-libc-dev:i386
            - valgrind
      script:
        - cd test
        - make relro_pie_tests CC=gcc-8
        - make relro_pie_m32_tests CC=gcc-8
        - make relro_pie_tests_on_valgrind CC=gcc-8
        - ./uclibc-test.sh x86_64
        - ./uclibc-test.sh i686
        - export OPT_CFLAGS=-O3
        - make relro_pie_tests CC=gcc-8
        - make relro_pie_m32_tests CC=gcc-8
        - make relro_pie_tests_on_valgrind CC=gcc-8
        - ./uclibc-test.sh x86_64
        - ./uclibc-test.sh i686
    - name: arm, armhf, arm64, ppc and ppc64le on QEMU 2.8
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: 'ppa:panfaust/qemu-backports'
          packages:
            - qemu-user
            - gcc-arm-linux-gnueabi
            - gcc-arm-linux-gnueabihf
            - gcc-aarch64-linux-gnu
            - gcc-powerpc-linux-gnu
            - gcc-powerpc64le-linux-gnu
            - libc6-dev-armhf-cross
            - libc6-dev-ppc64el-cross
            - libc6-dev-powerpc-cross
            - libc6-dev-armel-cross
            - libc6-dev-arm64-cross
      script:
        - cd test
        - make relro_pie_tests TARGET_PLATFORM=arm-linux-gnueabi
        - make relro_pie_tests TARGET_PLATFORM=arm-linux-gnueabihf
        - make relro_pie_tests TARGET_PLATFORM=aarch64-linux-gnu
        - make relro_pie_tests TARGET_PLATFORM=powerpc-linux-gnu QEMU_ARCH=ppc
        - make relro_pie_tests TARGET_PLATFORM=powerpc64le-linux-gnu QEMU_ARCH=ppc64le
        - export OPT_CFLAGS=-O3
        - make relro_pie_tests TARGET_PLATFORM=arm-linux-gnueabi
        - make relro_pie_tests TARGET_PLATFORM=arm-linux-gnueabihf
        - make relro_pie_tests TARGET_PLATFORM=aarch64-linux-gnu
        - make relro_pie_tests TARGET_PLATFORM=powerpc-linux-gnu QEMU_ARCH=ppc
        - make relro_pie_tests TARGET_PLATFORM=powerpc64le-linux-gnu QEMU_ARCH=ppc64le
    - name: macOS 10.15.7 Catalina (The latest supported by travis)
      os: osx
      osx_image: xcode12.2
      script:
        - cd test
        - make run_tests
        - export OPT_CFLAGS=-O3
        - make run_tests
    - name: macOS 10.13 High Sierra (The latest Xcode supporting 32-bit)
      os: osx
      osx_image: xcode10.1
      script:
        - cd test
        - make run_tests
        - make run_tests EXTRA_CFLAGS=-m32
        - export OPT_CFLAGS=-O3
        - make run_tests
        - make run_tests EXTRA_CFLAGS=-m32
    - name: macOS 10.10 Yosemite (The oldest supported by travis)
      os: osx
      osx_image: xcode6.4
      script:
        - cd test
        - make run_tests
        - make run_tests EXTRA_CFLAGS=-m32
        - export OPT_CFLAGS=-O3
        - make run_tests
        - make run_tests EXTRA_CFLAGS=-m32
    # - name: Android arm64 and armeabi
    #   language: android
    #   android:
    #     components:
    #       - sys-img-arm64-v8a-google_apis-25
    #       - sys-img-armeabi-v7a-google_apis-25
    #       - sys-img-x86_64-google_apis-25
    #       - sys-img-x86-google_apis-25
    #   script:
    #     - ./test/android/run_tests
    - name: Windows
      os: windows
      script:
        - cd test
        - ./run-test.bat amd64  "-LD -MD"     "-MD"
        - ./run-test.bat x86    "-LD -MD"     "-MD"
        - ./run-test.bat amd64  "-LD -MD -O2" "-MD -O2"
        - ./run-test.bat x86    "-LD -MD -O2" "-MD -O2"
        - ./run-test.bat amd64  "-LDd -MDd"   "-MDd"
        - ./run-test.bat x86    "-LDd -MDd"   "-MDd"
